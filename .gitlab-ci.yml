stages: 
    - build
    - analyse
    - test
    


code-check:
  stage: analyse
  before_script:
      - "cd ip_backend_pixelServer"
  image: mcr.microsoft.com/dotnet/sdk:5.0
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
      - "apt-get update"
      - "apt-get install --yes openjdk-11-jre"
      - "dotnet tool install --global dotnet-sonarscanner"
      - "export PATH=\"$PATH:$HOME/.dotnet/tools\""
      - "dotnet sonarscanner begin /k:\"Individueel-S3\" /d:sonar.login=\"$SONAR_TOKEN\" /d:\"sonar.host.url=$SONAR_HOST_URL\" "
      - "dotnet build"
      - "dotnet sonarscanner end /d:sonar.login=\"$SONAR_TOKEN\""
  allow_failure: true
  only:
    - main # or the name of your main branch


test_backend:
    before_script:
        - cd ip_backend_pixelServer
    image: mcr.microsoft.com/dotnet/core/sdk:latest
    stage: test
    script: 
        - echo "Testing"
        # - "cd $GameTests"
        # - "dotnet test"

test_frontend: 
    stage: test
    script: 
        - echo "TestFront"


RestAPI-Docker:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker compose build .
    - docker push DickyJannes/IndividueelS3

  only:
    - main





